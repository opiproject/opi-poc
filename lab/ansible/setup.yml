# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022 Dell Inc, or its subsidiaries.
---

- name:
  hosts: all
  gather_facts: false
  tasks:
    - name: Sync all clocks
      ansible.builtin.shell: "date -s '{{ now() }}'"

- name:
  hosts: switches
  gather_facts: false
  tasks:
    - name: run show version on remote devices
      arista.eos.eos_command:
        commands: show version

- name:
  hosts: hostbmcs
  become: yes
  tasks:
    - name: Get Firmware Inventory
      community.general.redfish_info:
        category: Update
        command: GetFirmwareInventory
        baseuri: "{{ ansible_host }}"
        username: "{{ ansible_user | default(ansible_env.USER) }}"
        password: "{{ ansible_password }}"
      register: result

    - name: Debug print first firmware entry version
      ansible.builtin.debug: var=result.redfish_facts.firmware.entries[0].Version

    - name: Get BIOS attributes
      community.general.redfish_info:
        category: Systems
        command: GetBiosAttributes
        baseuri: "{{ ansible_host }}"
        username: "{{ ansible_user | default(ansible_env.USER) }}"
        password: "{{ ansible_password }}"
      register: result

    - name: Debug print bios serial number
      ansible.builtin.debug: msg={{ result.redfish_facts.bios_attribute.entries[0][1].SerialNumber | default(result.redfish_facts.bios_attribute.entries[0][1].SystemServiceTag) }}

- name: Set up for OPI LAB environment
  hosts: hostservers,DPUs,Management
  become: yes
  tasks:
    - name: Install usefull packages
      ansible.builtin.package:
        name: python3-pip,sshpass,git
        state: present

    - name: Debian | Docker
      when: ansible_os_family == 'Debian'
      block:
        - name: Debian | Remove old docker
          ansible.builtin.package:
            name: docker.io,docker-doc,docker-compose,docker-compose-v2,podman-docker,containerd,runc
            state: absent
        - name: Debian | Install new docker
          ansible.builtin.package:
            name: docker-ce,docker-ce-cli,containerd.io,docker-buildx-plugin,docker-compose-plugin
            state: present

    # TODO: re-enable MEV

    - name: Red Hat | Docker
      when: ansible_os_family == 'RedHat' and inventory_hostname != 'mev'
      block:
        - name: Red Hat | Install package dependencies
          ansible.builtin.package:
            name: podman,podman-docker,podman-plugins
            state: present
        # docker-compose >=2 does not work with podman currently
        - name: Red Hat | Install docker-compose
          ansible.builtin.pip:
            name: docker-compose>=1.29,<2
            state: present
        - name: Red Hat | Enable podman socket for docker-compose
          ansible.builtin.systemd:
            name: podman.socket
            state: started

    # TODO: copy correct telegraf.conf file per host...
    #- name: Copy file to host
    #  ansible.builtin.copy: src=../otel/telegraf.d/telegraf.conf.{{ inventory_hostname }} dest=/root/telegraf.conf.new

    # TODO: re-enable MEV

    - name: Run telegraf container
      when: inventory_hostname != 'mev'
      community.docker.docker_container:
        name: telegraf
        image: docker.io/library/telegraf:1.29
        state: started
        restart: true
        detach: true
        network_mode: host
        restart_policy: always
        mounts:
          - type: bind
            source: /root/telegraf.conf
            target: /etc/telegraf/telegraf.conf
            read_only: true

- name:
  hosts: Management
  become: yes
  tasks:
    - name: Run Monitoring OTEL, Prometheus, Grafana
      community.docker.docker_compose_v2:
        project_src: /root/opi-poc/lab/otel
      register: output

    - name: Run telegraf container for TOR and 100G arista switch
      community.docker.docker_container:
        name: telegraf_arista
        image: docker.io/library/telegraf:1.29
        state: started
        restart: true
        detach: true
        network_mode: host
        restart_policy: always
        mounts:
          - type: bind
            source: /root/telegraf.conf.arista
            target: /etc/telegraf/telegraf.conf
            read_only: true

- name:
  hosts: mev
  become: yes
  tasks:
    - name: Install socat
      ansible.builtin.package:
        name: socat
        state: present

    - name: Create socat-otel systemd service file
      template:
        src: ../hardware/dh4/fs/etc/systemd/system/socat-otel.service
        dest: /etc/systemd/system/socat-otel.service

    - name: Enable and Start service socat-otel
      ansible.builtin.service:
        name: socat-otel
        enabled: yes
        state: started
        daemon_reload: yes
