syntax = "proto3";
package opi.storage.v1;
option go_package = "./opi.storage.v1";

// Back End (network-facing) APIs.

// NVMe/TCP and NVMe/RoCEv2

service NVMfRemoteController {
    rpc NVMfRemoteControllerConnect (NVMfRemoteControllerConnectRequest) returns (NVMfRemoteControllerConnectResponse) {}
    rpc NVMfRemoteControllerDisconnect (NVMfRemoteControllerDisconnectRequest) returns (NVMfRemoteControllerDisconnectResponse) {}
    rpc NVMfRemoteControllerReset (NVMfRemoteControllerResetRequest) returns (NVMfRemoteControllerResetResponse) {}
    rpc NVMfRemoteControllerList   (NVMfRemoteControllerListRequest)   returns (NVMfRemoteControllerListResponse)   {}
    rpc NVMfRemoteControllerGet    (NVMfRemoteControllerGetRequest)    returns (NVMfRemoteControllerGetResponse)    {}
    rpc NVMfRemoteControllerStats  (NVMfRemoteControllerStatsRequest)  returns (NVMfRemoteControllerStatsResponse)  {}
}

// TODO: iSCSI - for older targets before NVMeoF support

// TODO: NVMe/PCIe - for localy attached devices

// TODO: NULL - for debug

message NVMfRemoteControllerConnectRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerConnectResponse {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerDisconnectRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerDisconnectResponse {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerResetRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerResetResponse {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerListRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerListResponse {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerGetRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerGetResponse {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerStatsRequest {
    string name = 1;
    int64 id = 2;
}

message NVMfRemoteControllerStatsResponse {
    string name = 1;
    int64 id = 2;
}

